{"version":3,"sources":["models/index.ts","store/user.ts","store/history.ts","store/image.ts","store/auth.ts","store/index.ts","components/Header.tsx","components/Footer.tsx","components/Loading.tsx","App.tsx","index.tsx"],"names":["AV","init","appId","process","appKey","serverURL","Auth","username","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","then","loginUser","error","logIn","logOut","current","Uploader","file","filename","item","Object","avFile","File","set","save","serverFile","console","log","page","limit","query","Query","include","skip","descending","equalTo","find","result","catch","id","createWithoutData","destroy","makeObservable","this","currentUser","observable","action","newList","list","concat","isLoading","hasMore","append","runInAction","length","message","finally","success","index","findIndex","splice","newFileName","newFile","isUploading","values","UserStore","getUser","err","resetUser","HistoryStore","reset","ImageStore","context","createContext","AuthStore","useStore","useContext","HeaderWrapper","styled","header","LinkWrapper","NavLink","StyledALink","a","StyledButton","Button","ButtonWrapper","div","Header","observer","history","useHistory","useEffect","to","activeClassName","exact","href","target","rel","attributes","type","onClick","logout","push","FooterWrapper","footer","Footer","Loading","Home","lazy","History","Login","Register","App","className","fallback","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3feb6c83.chunk.js","sourcesContent":["import AV, {User} from 'leancloud-storage';\r\n\r\n\r\n\r\nAV.init({\r\n    appId: process.env.REACT_APP_ID || '',\r\n    appKey: process.env.REACT_APP_KEY || '',\r\n    serverURL: process.env.REACT_APP_SERVER_URL || ''\r\n});\r\n\r\nconst Auth = {\r\n    register(username: string, password: string) {\r\n        const user = new User();\r\n        user.setUsername(username);\r\n        user.setPassword(password);\r\n        return new Promise((resolve, reject) => {\r\n            user.signUp().then(loginUser => {\r\n                resolve(loginUser);\r\n            }, error => {\r\n                reject(error);\r\n            });\r\n        });\r\n\r\n    },\r\n    login(username: string, password: string) {\r\n        return new Promise((resolve, reject) => {\r\n            User.logIn(username, password).then(loginUser => resolve(loginUser), error => reject(error));\r\n        });\r\n    },\r\n    logout() {\r\n        User.logOut().then();\r\n    },\r\n    getCurrentUser() {\r\n        return AV.User.current();\r\n    }\r\n};\r\nconst Uploader = {\r\n    add(file: any, filename: string) {\r\n        const item = new AV.Object('Image');\r\n        const avFile = new AV.File(filename, file);\r\n        item.set('filename', filename);\r\n        item.set('owner', AV.User.current());\r\n        item.set('image', avFile);\r\n        return new Promise((resolve, reject) => {\r\n            item.save().then((serverFile) => {\r\n                console.log('保存成功');\r\n                resolve(serverFile);\r\n            }, (error) => {\r\n                console.log('保存失败');\r\n                reject(error);\r\n            });\r\n        });\r\n    },\r\n    find(page = 1, limit = 10) {\r\n        const query = new AV.Query('Image');\r\n        query.include('owner');\r\n        query.limit(limit);\r\n        query.skip((page - 1) * limit);\r\n        query.descending('createdAt');\r\n        query.equalTo('owner', AV.User.current());\r\n        return new Promise((resolve, reject) => {\r\n            query.find().then(result => resolve(result)).catch(error => reject(error));\r\n        });\r\n\r\n    },\r\n    remove(id: string) {\r\n        const item = AV.Object.createWithoutData('Image', id);\r\n        return new Promise((resolve, reject) => {\r\n            item.destroy().then((result) => {\r\n                console.log('删除图片');\r\n                resolve(result);\r\n\r\n            }).catch(error => {\r\n                reject(error);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n};\r\n\r\nexport {Auth, Uploader};\r\n","import {observable, action, makeObservable} from \"mobx\";\r\nimport {Auth} from \"../models\";\r\nimport {User} from \"leancloud-storage\";\r\n\r\nclass UserStore {\r\n    @observable currentUser: User | null = null;\r\n\r\n    @action getUser() {\r\n        this.currentUser = Auth.getCurrentUser()\r\n    }\r\n\r\n    @action resetUser() {\r\n        this.currentUser = null\r\n    }\r\n    constructor() {\r\n        makeObservable(this)\r\n    }\r\n}\r\n\r\nexport default  new UserStore()","import {observable, action, makeObservable, runInAction} from 'mobx';\r\nimport {Uploader} from '../models';\r\nimport {message} from 'antd';\r\n\r\nclass HistoryStore {\r\n    @observable list: any[] = [];\r\n    @observable isLoading = false;\r\n    @observable hasMore = true;\r\n    @observable page = 1;\r\n    limit = 10;\r\n\r\n    @action append(newList: []) {\r\n        this.list = this.list.concat(newList);\r\n    }\r\n\r\n    @action find() {\r\n        this.isLoading = true;\r\n        if (this.hasMore) {\r\n            Uploader.find(this.page, this.limit).then(\r\n                (newList: any) => {\r\n                    this.append(newList);\r\n                    runInAction(() => {\r\n                        this.page += 1;\r\n                        if (newList.length < this.limit) {\r\n                            this.hasMore = false;\r\n                        }\r\n                    });\r\n\r\n\r\n                }\r\n            ).catch(() => {\r\n                message.error('加载失败').then();\r\n            }).finally(() => {\r\n                runInAction(() => {\r\n                    this.isLoading = false;\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    @action remove(id: string) {\r\n        Uploader.remove(id)\r\n            .then(() => {\r\n                    message.success('删除成功').then();\r\n                    const index = this.list.findIndex(item => item.id === id);\r\n                    runInAction(()=>{\r\n                        this.list.splice(index, 1);\r\n                    })\r\n\r\n                }\r\n            )\r\n            .catch(() => message.error('删除图片失败'));\r\n    }\r\n\r\n\r\n    @action reset() {\r\n        this.isLoading = false;\r\n        this.list = [];\r\n        this.page = 1;\r\n        this.hasMore = true;\r\n        this.limit = 10;\r\n    }\r\n\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n\r\n}\r\n\r\nexport default new HistoryStore();\r\n","import {observable, action, makeObservable, runInAction} from 'mobx';\r\nimport {Uploader} from '../models';\r\n\r\nclass ImageStore {\r\n    @observable filename = '';\r\n    @observable file: any = null;\r\n    @observable isUploading = false;\r\n    @observable serverFile: any = null;\r\n\r\n    @action setFilename(newFileName: string) {\r\n        this.filename = newFileName;\r\n    }\r\n\r\n    @action setFile(newFile: any) {\r\n        this.file = newFile;\r\n    }\r\n\r\n    @action upload() {\r\n        this.isUploading = true;\r\n        this.serverFile = null;\r\n        return new Promise((resolve, reject) => {\r\n            Uploader.add(this.file, this.filename).then(serverFile => {\r\n                runInAction(() => {\r\n                    this.serverFile = serverFile;\r\n                });\r\n                resolve(serverFile);\r\n            }).catch((error) => {\r\n                reject(error);\r\n            }).finally(() => {\r\n                runInAction(() => {\r\n                    this.isUploading = false;\r\n                });\r\n\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    @action reset() {\r\n        this.serverFile = null;\r\n        this.isUploading = false;\r\n    }\r\n\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n\r\n}\r\n\r\nexport default new ImageStore();\r\n","import {observable, action, makeObservable} from \"mobx\";\r\nimport {Auth} from '../models'\r\nimport UserStore from './user'\r\nimport {message} from 'antd';\r\nimport HistoryStore from './history';\r\nimport ImageStore from './image';\r\n\r\nclass AuthStore {\r\n    @observable values = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n\r\n    @action setUsername(username: string) {\r\n        this.values.username = username\r\n    }\r\n\r\n    @action setPassword(password: string) {\r\n        this.values.password = password\r\n    }\r\n\r\n    @action login() {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.login(this.values.username, this.values.password).then((user) => {\r\n                console.log('登录成功');\r\n                UserStore.getUser()\r\n                resolve(user)\r\n            }).catch((err) => {\r\n                message.error('登录失败').then()\r\n                reject(err)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    @action register() {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.register(this.values.username, this.values.password).then((user) => {\r\n                console.log('注册成功');\r\n                UserStore.getUser()\r\n                resolve(user)\r\n            }).catch((err) => {\r\n                message.error('注册失败').then()\r\n                UserStore.resetUser()\r\n                reject(err)\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    @action logout() {\r\n        Auth.logout();\r\n        UserStore.resetUser();\r\n        HistoryStore.reset();\r\n        ImageStore.reset();\r\n    }\r\n    constructor() {\r\n        makeObservable(this)\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthStore();\r\n","import {useContext, createContext} from \"react\";\r\nimport AuthStore from \"./auth\";\r\nimport UserStore from \"./user\"\r\nimport ImageStore from \"./image\"\r\nimport HistoryStore from './history';\r\n\r\n\r\nconst context = createContext({\r\n    AuthStore,\r\n    UserStore,\r\n    ImageStore,\r\n    HistoryStore\r\n})\r\n\r\nexport const useStore = () => useContext(context)\r\n","import React, {useEffect} from 'react';\r\nimport {NavLink, useHistory} from \"react-router-dom\"\r\nimport styled from 'styled-components'\r\nimport {Button} from 'antd'\r\nimport {useStore} from \"../store\";\r\nimport {observer} from \"mobx-react\";\r\n\r\nconst HeaderWrapper = styled.header`\r\n  background-color: #02101f;\r\n  padding: 10px 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  color: #fff;\r\n`\r\nconst LinkWrapper = styled(NavLink)`\r\n  color: #fff;\r\n  margin-left: 30px;\r\n\r\n  &.active {\r\n    border-bottom: 1px solid #fff;\r\n  }\r\n`\r\nconst StyledALink = styled.a`\r\n  color:#fff;\r\n  margin-left: 30px;\r\n  font-size:15px;\r\n  &.active {\r\n    border-bottom:1px solid #fff;\r\n  }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-left: 10px;\r\n`\r\nconst ButtonWrapper = styled.div`\r\n  margin-left: auto;\r\n`\r\nconst Header = observer(() => {\r\n    const {UserStore, AuthStore} = useStore();\r\n    const history = useHistory()\r\n    const handleLogout = () => {\r\n        AuthStore.logout()\r\n    }\r\n    const handleLogin = () => {\r\n        history.push('/login')\r\n    }\r\n    const handleRegister = () => {\r\n        history.push('/register')\r\n    }\r\n    useEffect(()=>{\r\n        UserStore.getUser()\r\n    },[UserStore])\r\n    return (\r\n        <HeaderWrapper>\r\n            <nav>\r\n                <LinkWrapper to=\"/\" activeClassName=\"active\" exact>首页</LinkWrapper>\r\n                <LinkWrapper to=\"/history\" activeClassName=\"active\">上传历史</LinkWrapper>\r\n                <StyledALink href=\"https://github.com/lichen404/react-epic\" target=\"_blank\" rel=\"noreferrer\">Github</StyledALink>\r\n            </nav>\r\n            <ButtonWrapper>\r\n                {\r\n                    UserStore.currentUser ?\r\n                        <>\r\n                            {UserStore.currentUser.attributes.username}\r\n                            <StyledButton type=\"primary\" onClick={handleLogout}>注销</StyledButton>\r\n                        </> :\r\n                        <>\r\n                            <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\r\n                            <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\r\n                        </>\r\n                }\r\n\r\n            </ButtonWrapper>\r\n        </HeaderWrapper>\r\n    )\r\n})\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nconst FooterWrapper = styled.footer`\r\n  padding: 10px 100px;\r\n  text-align:center;\r\n  font-size: 14px;\r\n  color: #aaa;\r\n  \r\n`\r\nconst Footer = ()=>{\r\n    return (\r\n        <FooterWrapper>\r\n            <span>WTFPL Licensed | Copyright © 2021 Li Chen</span>\r\n        </FooterWrapper>\r\n    )\r\n}\r\nexport default Footer;\r\n","const Loading = () => {\r\n    return (\r\n        <div>Loading...</div>\r\n    )\r\n}\r\nexport default Loading;\r\n","import React, {lazy, Suspense} from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Footer from \"./components/Footer\";\r\nimport Loading from \"./components/Loading\";\r\nimport './App.css'\r\n\r\nconst Home = lazy(() => import('./pages/Home'))\r\nconst History = lazy(() => import(\"./pages/History\"))\r\nconst Login = lazy(() => import(\"./pages/Login\"))\r\nconst Register = lazy(() => import('./pages/Register'))\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div className=\"mainWrapper\">\r\n                <main>\r\n                    <Suspense fallback={Loading()}>\r\n\r\n                        <Switch>\r\n                            <Route path=\"/\" exact>\r\n                                <Home/>\r\n                            </Route>\r\n                            <Route path=\"/history\">\r\n                                <History/>\r\n                            </Route>\r\n                            <Route path=\"/login\">\r\n                                <Login/>\r\n                            </Route>\r\n                            <Route path=\"/register\">\r\n                                <Register/>\r\n                            </Route>\r\n                        </Switch>\r\n\r\n                    </Suspense>\r\n                </main>\r\n                <Footer/>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {HashRouter as Router} from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(\r\n      <Router>\r\n    <App />\r\n      </Router>\r\n ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}